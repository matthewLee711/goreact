React:
JS View Library 
Babel - translate es2015/2016 syntax in old school es5

//Channel should have components of react
class Channel extends React.Component

//render
converts html into jsx or java script code

//Type serve to load up page

Properties: pass information to components (bidirectional)
<Channel name='Hardware'/>
Channel will recieve something called name which will adpot it
//This line below accepts the name set
{this.props.name}
//you can use injection for everything. not jjust string

For event handlers:
Originally you had to bind functions to use them within a component
////this.onClick.bind(this) <oldschool method for calling functions

Composition: parent React Component
Pass the Channel Array as a property to the ChannelList(use controller view later)
Create property for channellist with takes in channel arr.

ARRAY:
keys keep track of of renders
Need to re-render array when adding stuff to it
USE a common parent for components that need access

Dynamically adding channels:

You can only pass a single react 'Parent component' to be rendered
Each JSX is is converted to a function call, so passing two function calls 
doesnt make sense
EX.
<somecomponent />
Reac.createElement(SomeComponent, null) <two of these will be passed to
the document.getelementbyid

SO create a parent component that will pass parent and child components
var ChannelSection = React.createClass({
	render : function() { //create property as channel list
		return (
			<div>
				<ChannelList channels={channels}/>
				<ChannelForm />
			</div>
		)
	}
});



1. Create addChannel function in Channel section
2. pass addChannel() function to ChannelForm as property
3.in ChannelsForms onSubmit(), call passed
add channel() function


npm init - create package.json


structure:
goreact
	index.css
	index.html
	index.js
	components/
		App.jsx
		channels/
			file for each react component
		messages/
		users/


Use webpack to bundle up code
builds a dependency graph
benefit of webpack stores all files into one tree

webpack.config, need to transpose files as es5
test will see if need to be transposed by loader

npm install webpack babel-loader@5.3.3 --save-dev

type webpack to see if it works

//automattically rebuild bundle when file
//changes are made to dependency graph
npm install webpack-dev-server -g

//should server and rebuild app on 8080
webpack-dev-server


npm install react --save-dev


Document component props
set a static property on class PropTypes